default:
  image: "registry.gitlab.com/synsense/rockpool/clean:latest"

stages:
  - preliminaries
  - test
  - docs
  - docs_deploy
  - build
  - deploy

black-check:
  stage: preliminaries
  needs: []
  image: "registry.gitlab.com/synsense/rockpool/clean:latest"
  before_script:
    - pip install --upgrade pip
    - pip install black==23.1.0

  script:
    - python -m black --check rockpool tests

gpu_validation:
  stage: preliminaries
  image: "registry.gitlab.com/synsense/rockpool/clean:latest"
  allow_failure: true
  tags:
    - cuda
  script:
    - nvidia-smi
    - which nvcc

unit_tests_clean:
  stage: test
  image: "registry.gitlab.com/synsense/rockpool/clean:latest"
  tags:
    - cuda

  before_script:
    - pip install --upgrade pip
    - pip install --upgrade ".[all]" --no-cache-dir
    - python -c 'import samna'
    - pip install --upgrade sinabs-exodus --no-cache-dir || exit_code=$?
    - if [ $exit_code -ne 0 ]; then echo "Exodus could not be installed"; fi;

  script:
    - pytest -v tests/tests_default --random-order

unit_tests_known_good:
  stage: test
  needs: []
  image: "registry.gitlab.com/synsense/rockpool/known_good:latest"
  tags:
    - cuda
  # parallel: 4

  before_script:
    - pip install ".[all]" --no-cache-dir

  script:
    - pytest --cov=tests/tests_default --cov-report term --cov-report xml:coverage.xml -v tests/tests_default --random-order --junitxml="test_report.xml"

  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    paths:
      - test_report.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: test_report.xml
    expire_in: 1 day

documentation_linting:
  stage: docs
  image: "registry.gitlab.com/synsense/rockpool/known_good:latest"
  allow_failure: true
  needs: []
  before_script:
    - pip install --upgrade pip
    - pip install --upgrade ".[all]" --no-cache-dir
    - python -c 'import samna'

  script:
    - sphinx-build -n -b dummy docs docs/_build/html

docs_build:
  stage: docs
  image: "registry.gitlab.com/synsense/rockpool/known_good:latest"
  allow_failure: true
  before_script:
    - pip install --upgrade pip
    - pip install ".[all]" --no-cache-dir
    - python -c 'import samna'

  script:
    - cp CHANGELOG.md docs/advanced
    - sphinx-build -b html docs docs/_build/html

  artifacts:
    paths:
      - docs/_build/html
    expire_in: 15 mins

dist_build:
  stage: build
  needs: ["unit_tests_known_good", "unit_tests_clean"]

  before_script:
    - pip install --upgrade pip
    - pip install wheel

  script:
    - python setup.py sdist

  artifacts:
    paths:
      - dist

pages:
  stage: docs_deploy
  only:
    - master

  allow_failure: true
  dependencies:
    - docs_build

  script:
    - mv docs/_build/html/ public/

  artifacts:
    paths:
      - public
     
pypi_deploy:
  stage: deploy
  when: manual

  only:
    - master

  dependencies:
    - dist_build

  before_script:
    - pip install --upgrade pip
    - pip install -U twine

  variables:
    TWINE_USERNAME: "__token__"
    TWINE_PASSWORD: $PYPI_PASSWORD
  script:
    - python -m twine upload dist/*
